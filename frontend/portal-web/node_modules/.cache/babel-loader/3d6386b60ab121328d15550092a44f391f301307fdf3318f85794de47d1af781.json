{"ast":null,"code":"import api from './api';\nexport const medicosService = {\n  // Obtener todos los médicos\n  async getAllMedicos() {\n    const response = await api.get('/medicos');\n    return response.data.data;\n  },\n  // Obtener médico por ID\n  async getMedicoById(id) {\n    const response = await api.get(`/medicos/${id}`);\n    return response.data.data;\n  },\n  // Crear nuevo médico\n  async createMedico(medicoData) {\n    const response = await api.post('/medicos', medicoData);\n    return response.data.data;\n  },\n  // Actualizar médico\n  async updateMedico(id, medicoData) {\n    const response = await api.put(`/medicos/${id}`, medicoData);\n    return response.data.data;\n  },\n  // Eliminar médico (soft delete)\n  async deleteMedico(id) {\n    await api.delete(`/medicos/${id}`);\n  },\n  // Buscar médicos por especialidad\n  async getMedicosByEspecialidad(especialidad) {\n    const response = await api.get(`/medicos?especialidad=${especialidad}`);\n    return response.data.data;\n  }\n};","map":{"version":3,"names":["api","medicosService","getAllMedicos","response","get","data","getMedicoById","id","createMedico","medicoData","post","updateMedico","put","deleteMedico","delete","getMedicosByEspecialidad","especialidad"],"sources":["C:/Users/Asus/Documents/GitHub/proyecto-3-arquitectura/frontend/portal-web/src/services/medicosService.ts"],"sourcesContent":["import api from './api';\r\nimport { Medico } from '../contexts/AppContext';\r\n\r\nexport const medicosService = {\r\n  // Obtener todos los médicos\r\n  async getAllMedicos(): Promise<Medico[]> {\r\n    const response = await api.get('/medicos');\r\n    return response.data.data;\r\n  },\r\n\r\n  // Obtener médico por ID\r\n  async getMedicoById(id: number): Promise<Medico> {\r\n    const response = await api.get(`/medicos/${id}`);\r\n    return response.data.data;\r\n  },\r\n\r\n  // Crear nuevo médico\r\n  async createMedico(medicoData: Omit<Medico, 'id' | 'createdAt' | 'updatedAt'>): Promise<Medico> {\r\n    const response = await api.post('/medicos', medicoData);\r\n    return response.data.data;\r\n  },\r\n\r\n  // Actualizar médico\r\n  async updateMedico(id: number, medicoData: Partial<Medico>): Promise<Medico> {\r\n    const response = await api.put(`/medicos/${id}`, medicoData);\r\n    return response.data.data;\r\n  },\r\n\r\n  // Eliminar médico (soft delete)\r\n  async deleteMedico(id: number): Promise<void> {\r\n    await api.delete(`/medicos/${id}`);\r\n  },\r\n\r\n  // Buscar médicos por especialidad\r\n  async getMedicosByEspecialidad(especialidad: string): Promise<Medico[]> {\r\n    const response = await api.get(`/medicos?especialidad=${especialidad}`);\r\n    return response.data.data;\r\n  },\r\n};\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAGvB,OAAO,MAAMC,cAAc,GAAG;EAC5B;EACA,MAAMC,aAAaA,CAAA,EAAsB;IACvC,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,UAAU,CAAC;IAC1C,OAAOD,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC3B,CAAC;EAED;EACA,MAAMC,aAAaA,CAACC,EAAU,EAAmB;IAC/C,MAAMJ,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,YAAYG,EAAE,EAAE,CAAC;IAChD,OAAOJ,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC3B,CAAC;EAED;EACA,MAAMG,YAAYA,CAACC,UAA0D,EAAmB;IAC9F,MAAMN,QAAQ,GAAG,MAAMH,GAAG,CAACU,IAAI,CAAC,UAAU,EAAED,UAAU,CAAC;IACvD,OAAON,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC3B,CAAC;EAED;EACA,MAAMM,YAAYA,CAACJ,EAAU,EAAEE,UAA2B,EAAmB;IAC3E,MAAMN,QAAQ,GAAG,MAAMH,GAAG,CAACY,GAAG,CAAC,YAAYL,EAAE,EAAE,EAAEE,UAAU,CAAC;IAC5D,OAAON,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC3B,CAAC;EAED;EACA,MAAMQ,YAAYA,CAACN,EAAU,EAAiB;IAC5C,MAAMP,GAAG,CAACc,MAAM,CAAC,YAAYP,EAAE,EAAE,CAAC;EACpC,CAAC;EAED;EACA,MAAMQ,wBAAwBA,CAACC,YAAoB,EAAqB;IACtE,MAAMb,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,yBAAyBY,YAAY,EAAE,CAAC;IACvE,OAAOb,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC3B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}